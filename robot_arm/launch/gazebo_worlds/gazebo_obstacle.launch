<?xml version="1.0"?>

<launch>

  <arg name="world_x" default="-7.0"/>
  <arg name="world_y" default="-4.5"/>
  <arg name="world_z" default="0.0"/>
  <arg name="world_yaw" default="0.0"/>

  <arg name="world_scale" default="1.5" />
  <arg name="walls" default="true" />

  <arg name="model" default="$(find robot_arm)/urdf/robot_arm_servo.urdf.xacro"/>

  <arg name="use_sim_time" default="true" />
  <arg name="gui" default="true" />
  <arg name="headless" default="false" />
  <arg name="world_name" default="$(find cpr_obstacle_gazebo)/worlds/actually_empty_world.world" />
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="debug" value="0" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="use_sim_time" value="$(arg use_sim_time)" />
    <arg name="headless" value="$(arg headless)" />
    <arg name="world_name" value="$(arg world_name)" />
  </include>

  <param name="world_geom" command="$(find xacro)/xacro --inorder '$(find cpr_obstacle_gazebo)/urdf/obstacle_geometry.urdf.xacro' world_scale:=$(arg world_scale) walls:=$(arg walls)" />

  <node name="obstacle_world_spawner" pkg="gazebo_ros" type="spawn_model"
    args="-urdf -model obstacle_geometry -param world_geom -x $(arg world_x) -y $(arg world_y) -z $(arg world_z) -Y $(arg world_yaw)" />


  <!-- Load the URDF into the ROS Parameter Server -->
  <param name="robot_description" command="$(find xacro)/xacro --inorder $(arg model)"/>

  <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
    args="-z 1.0 -unpause -urdf -model Robot_Arm -param robot_description"/>

</launch>
