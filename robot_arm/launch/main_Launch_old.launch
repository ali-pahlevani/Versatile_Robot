<launch>

<arg name="model" default="$(find robot_arm)/urdf/robot_arm_servo.urdf.xacro"/>

<!-- Launch gazebo -->
<!-- <include file="$(find robot_arm)/launch/gazebo_wall.launch"> -->
<!-- <include file="$(find robot_arm)/launch/gazebo_crowded.launch"> -->
<!-- <include file="$(find robot_arm)/launch/gazebo_obstacle.launch"> -->
<include file="$(find robot_arm)/launch/gazebo_obstacle_edited.launch">

  <arg name="model" value="$(arg model)"/>
 </include> 

<!-- Load joint controller configuration from YAML file to parameter server -->

<rosparam file="$(find robot_arm)/config/robot_arm_control.yaml" command="load"/>

<rosparam file="$(find robot_arm)/config/diff_drive.yaml" command="load"/>

<rosparam file="$(find robot_arm)/config/gripper.yaml" command="load"/>

<node name="robot_arm_controller_spawner" pkg="controller_manager" type="spawner"
  respawn="true" output="screen" 
   args="/Robot_Arm/joint_state_controller
         /Robot_Arm/Shoulder_pan_position_controller
         /Robot_Arm/Shoulder_roll_position_controller
         /Robot_Arm/Elbow_pan_position_controller
         /Robot_Arm/Elbow_pitch_position_controller
         /Robot_Arm/Gripper_pan_position_controller
         /Robot_Arm/Gripper_pitch_position_controller
         /Robot_Arm/Gripper_controller
         /Robot_Arm/Robot_arm_diffdrive_controller
      --shutdown-timeout 3"/>

<!-- convert joint states to TF transforms for rviz, etc -->
<node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"
    respawn="false" output="screen">
</node>

<!-- Static transform between dummy and chassis -->
<node pkg="tf2_ros" type="static_transform_publisher" name="dummy_to_chassis" args="0 0 0 0 0 0 1 chassis dummy" />

<node name="rqt_robot_steering" pkg="rqt_robot_steering" type="rqt_robot_steering">
  <param name="default_topic" value="/Robot_Arm/Robot_arm_diffdrive_controller/cmd_vel"/> 
</node>

</launch>

